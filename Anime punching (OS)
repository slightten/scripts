for i,v in pairs(game.CoreGui:GetChildren()) do
    if v.Name == "ScreenGui" then
        v:Destroy()
    end
end

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/sannin9000/Ui-Libraries/main/uwuware", true))()
local plr = game.Players.LocalPlayer
local Window = Library:CreateWindow"Anime Punching Sim"

local w3 = Library:CreateWindow"Rebirths"
local w4 = Library:CreateWindow"Unlock Areas"
local w1 = Library:CreateWindow"Misc"

Window:AddToggle({text = "Auto Punch", flag = "toggle", state = false, callback = function(a) 
aa = a
while aa do task.wait()
game:GetService("ReplicatedStorage").Remotes.TappingEvent:FireServer()
end
 end})

local plist = {
    "Spawn - 180",
    "SAO - 350"
}

for i,v in pairs(game:GetService("Workspace")["__SETTINGS"]["__INTERACT"]:GetDescendants()) do
    if v.Name == "Boost" and v.Value == 180 then
        v.Parent.Name = "Spawnp"
    end
    end

for i,v in pairs(game:GetService("Workspace")["__SETTINGS"]["__INTERACT"]:GetDescendants()) do
    if v.Name == "Boost" and v.Value == 350 then
        v.Parent.Name = "SAOp"
    end
    end


Window:AddList({text = "List", flag = "list", values = plist, callback = function(rfart)
getgenv().practice = rfart
end})

Window:AddToggle({text = "Auto Practice", flag = "toggle", state = false, callback = function(awa) 
awar = awa
while awar do task.wait()
if practice == "Spawn - 180" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(62, 23, 253)
local args = {[1] = "Practice",[2] = workspace.__SETTINGS.__INTERACT.Spawnp}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
elseif practice == "SAO - 350" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-56322, 62, -7636)
local args = {[1] = "Practice",[2] = workspace.__SETTINGS.__INTERACT.SAOp}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end
end
 end})














local rlist = {
    "1",
    "5",
    "15",
    "25",
    "45",
    "75",
    "140",
    "350",
    "850",
    "1.5K",
    "4.5K",
    "8.5K",
    "15K",
    "125K",
    "650K",
    "3.5M",
    "65M",
    "890M",
    "75B",
    "3T",
    "15T",
    "95T",
    "2qd",
    "15qd",
    "85qd",
    "185qd",
    "5Qn",
    "25Qn",
    "850Qn",
    "5sx",
    "15sx",
    "75sx",
    "150sx",
    "300sx",
    "450sx",
    "600sx",
    "750sx",
    "1.05Sp",
    "1.27Sp",
    "1.35Sp",
    "1.65Sp"}

w3:AddList({text = "List", flag = "list", values = rlist, callback = function(lfart)
getgenv().rebirths = lfart
end})

w3:AddToggle({text = "Auto Rebirth", flag = "toggle", state = false, callback = function(b)
bb = b
while bb do task.wait()
if rebirths == "1" then
local args = {[1] = "Rebirths",[2] = 1}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
elseif rebirths == "5" then
 local args = {[1] = "Rebirths",[2] = 2}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "15" then
 local args = {[1] = "Rebirths",[2] = 3}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "25" then
 local args = {[1] = "Rebirths",[2] = 4}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "45" then
 local args = {[1] = "Rebirths",[2] = 5}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "75" then
 local args = {[1] = "Rebirths",[2] = 6}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "140" then
 local args = {[1] = "Rebirths",[2] = 7}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "350" then
 local args = {[1] = "Rebirths",[2] = 8}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "850" then
 local args = {[1] = "Rebirths",[2] = 9}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "1.5K" then
 local args = {[1] = "Rebirths",[2] = 10}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "4.5K" then
 local args = {[1] = "Rebirths",[2] = 11}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "8.5K" then
 local args = {[1] = "Rebirths",[2] = 12}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "15K" then
 local args = {[1] = "Rebirths",[2] = 13}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "125K" then
 local args = {[1] = "Rebirths",[2] = 14}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "650K" then
 local args = {[1] = "Rebirths",[2] = 15}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "3.5M" then
 local args = {[1] = "Rebirths",[2] = 16}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "65M" then
 local args = {[1] = "Rebirths",[2] = 17}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "890M" then
 local args = {[1] = "Rebirths",[2] = 18}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "75B" then
 local args = {[1] = "Rebirths",[2] = 19}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "3T" then
 local args = {[1] = "Rebirths",[2] = 20}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "15T" then
 local args = {[1] = "Rebirths",[2] = 21}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "95T" then
 local args = {[1] = "Rebirths",[2] = 22}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "2qd" then
 local args = {[1] = "Rebirths",[2] = 23}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "15qd" then
 local args = {[1] = "Rebirths",[2] = 24}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "85qd" then
 local args = {[1] = "Rebirths",[2] = 25}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "185qd" then
 local args = {[1] = "Rebirths",[2] = 26}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "5Qn" then
 local args = {[1] = "Rebirths",[2] = 27}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "25Qn" then
 local args = {[1] = "Rebirths",[2] = 28}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "850Qn" then
 local args = {[1] = "Rebirths",[2] = 29}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "5sx" then
 local args = {[1] = "Rebirths",[2] = 30}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "15sx" then
 local args = {[1] = "Rebirths",[2] = 31}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "75sx" then
 local args = {[1] = "Rebirths",[2] = 32}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "150sx" then
 local args = {[1] = "Rebirths",[2] = 33}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "300sx" then
 local args = {[1] = "Rebirths",[2] = 34}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "450sx" then
 local args = {[1] = "Rebirths",[2] = 35}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "600sx" then
 local args = {[1] = "Rebirths",[2] = 36}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "750sx" then
 local args = {[1] = "Rebirths",[2] = 37}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "1.05Sp" then
 local args = {[1] = "Rebirths",[2] = 38}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "1.27Sp" then
 local args = {[1] = "Rebirths",[2] = 39}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "1.35Sp" then
 local args = {[1] = "Rebirths",[2] = 40}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
elseif rebirths == "1.65Sp" then
 local args = {[1] = "Rebirths",[2] = 41}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))   
end
end
end})

w4:AddButton({text = "Pirate 2.5K", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Pirates"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Slayer 30K", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Slayer"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Ninja 100K", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Ninja"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Revengers 300K", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Revengers"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Camp 2M", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Camp"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Slime 90M", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Slime"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Jujutsu 750M", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Jujutsu"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Soul 5B", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Soul"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Morioh 1.5T", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Morioh"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Hero 95T", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Hero"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Aot 1.5qd", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Aot"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Hunter 950qd", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Hunter"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Fairy 750Qn", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Fairy"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "One Punch 250sx", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "One Punch"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "Clover 75Sp", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Clover"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})
w4:AddButton({text = "SAO 1.49'O", flag = "button", callback = function() 
local args = {[1] = "Areas",[2] = "Sword Art"}
game:GetService("ReplicatedStorage").Remotes.ClientRemote:InvokeServer(unpack(args))
end})














w1:AddBind({text = "Toggle UI", key = "RightControl", callback = function() 
    Library:Close() 
end})

Library:Init()
